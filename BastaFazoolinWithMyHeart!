#Basta Fazoolin' with My Heart!
#Defining Menu
class Menu:
  def __init__(self, name, items, start_time, end_time):
    self.name = name
    self.items = items
    self.start_time = start_time
    self.end_time = end_time
 #Name of Menu
  def __repr__(self):
    return "Menu type: {menu_type}  Availability: {start} till {end}".format(menu_type=self.name, start=self.start_time, end=self.end_time)
#Calc Bill  
  def calculate_bill(self, purchased_items):
    total = 0
    for item in purchased_items:
      total += self.items[item]
    return total
#Create first Franchaise!
class Franchise:
  def __init__(self, address, menus):
    self.address = address
    self.menus = menus
  def __repr__(self):
    return self.address
#Def Avail Menus
  def available_menus(self, time):
    list1 = []
    for menu in self.menus:
      if (time >= menu.start_time) and (time <= menu.end_time):
        list1.append(menu)
    return list1
#Def Biz Class
class Business:
  def __init__(self, name, franchises):
    self.name = name
    self.franchises = franchises
#Menus
#Brunch Menu
brunch = Menu('brunch', {
  'pancakes': 7.50, 'waffles': 9.00, 'burger': 11.00, 'home fries': 4.50, 'coffee': 1.50, 'espresso': 3.00, 'tea': 1.00, 'mimosa': 10.50, 'orange juice': 3.50
}, 11, 16)
#Early Bird
early_bird = Menu('early bird', {
  'salumeria plate': 8.00, 'salad and breadsticks (serves 2, no refills)': 14.00, 'pizza with quattro formaggi': 9.00, 'duck ragu': 17.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 1.50, 'espresso': 3.00,
}, 15, 18)
#Dinner Menu
dinner = Menu('dinner', {
  'crostini with eggplant caponata': 13.00, 'ceaser salad': 16.00, 'pizza with quattro formaggi': 11.00, 'duck ragu': 19.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 2.00, 'espresso': 3.00,
}, 17, 23)
#Kid's Menue
kids = Menu('kids', {
  'chicken nuggets': 6.50, 'fusilli with wild mushrooms': 12.00, 'apple juice': 3.00
}, 11, 21)
# Take a' Arepa Menu
arepas_menu = Menu('arepa', {
  'arepa pabellon': 7.00, 'pernil arepa': 8.50, 'guayanes arepa': 8.00, 'jamon arepa': 7.50
}, 10, 20)
#Restruant Addresses
flagship_store = Franchise('1232 West End Road', [brunch, early_bird, dinner, kids])
new_installment = Franchise('12 East Mulberry Street', [brunch, early_bird, dinner, kids])
arepas_place = Franchise('189 Fitzgerald Avenue', [arepas_menu])
#Flagship and New Installment  (Names)
First = Business('Basta Fazoolin with my Heart', [flagship_store, new_installment])
Second = Business('Take a Arepa', [arepas_place])
#TESTS
#Print Brunch
#print(brunch)

#Print Calc Bill for Breakfast
#print(brunch.calculate_bill(['pancakes', 'home fries', 'coffee']))

#Print Calc Bill for Early Bird
#print(early_bird.calculate_bill(['salumeria plate', 'mushroom ravioli (vegan)']))

#Print Available Menus @ Noon
#print(flagship_store.available_menus(12))

#Print Available Menus @ 5PM
#print(flagship_store.available_menus(17))

